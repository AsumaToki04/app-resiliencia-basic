spring.application.name=app-resiliencia-basic

# Tamaño de la ventana deslizante que evalúa las últimas 10 solicitudes.
resilience4j.circuitbreaker.instances.myService.slidingWindowSize = 10

# Mínimo de 5 solicitudes procesadas antes de empezar a evaluar la tasa de fallos.
resilience4j.circuitbreaker.instances.myService.minimumNumberOfCalls = 5

# Umbral de fallos: si el 50% de las solicitudes fallan, el Circuit Breaker se abre.
resilience4j.circuitbreaker.instances.myService.failureRateThreshold = 50

# Tiempo (en segundos) que el Circuit Breaker permanecerá abierto antes de pasar a Semi-abierto.
resilience4j.circuitbreaker.instances.myService.waitDurationInOpenState = 10s

# Número de solicitudes permitidas en estado Semi-abierto para verificar la recuperación del servicio.
resilience4j.circuitbreaker.instances.myService.permittedNumberOfCallsInHalfOpenState = 3

# Límite de tiempo (2 segundos) que define cuándo una solicitud es considerada lenta.
resilience4j.circuitbreaker.instances.myService.slowCallDurationThreshold = 2s

# Si el 60% de las solicitudes son lentas, el Circuit Breaker se abre.
resilience4j.circuitbreaker.instances.myService.slowCallRateThreshold = 60

# Endpoints expuestas para la monitorización: salud, información de la app, circuit breakers y métricas
management.endpoints.web.exposure.include = health,info,circuitbreakers,metrics